<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Return to laughter</title>
    <link>https://blog.jxtsai.info/post/</link>
    <description>Recent content in Posts on Return to laughter</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 29 Oct 2016 18:14:00 +0000</lastBuildDate>
    <atom:link href="https://blog.jxtsai.info/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>大數據下的「我」？</title>
      <link>https://blog.jxtsai.info/2016/10/29/aj-bigdata</link>
      <pubDate>Sat, 29 Oct 2016 18:14:00 +0000</pubDate>
      
      <guid>https://blog.jxtsai.info/2016/10/29/aj-bigdata</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/HTxzpHl.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;昨天不記得從哪篇文章連到了2014年半島新聞美國電視台所製作發佈的一本電子書&lt;a href=&#34;http://projects.aljazeera.com/2014/terms-of-service/&#34;&gt;「Terms of Service: Understanding our role in the world of big data」&lt;/a&gt;，內容非常精采，把許多數位時代下大數據隱憂用生動活潑的故事，透過友善親近的漫畫形式，具體而微地呈現了當下網路時代的現象與問題，我特別截出了二個最讓我印象深切的截圖。十多年前我們或許擔心的是：上網瀏覧記錄與內容會被誰(ISP,網站內容供應商、不知名的隱形廣告cookies)看到，那些有意無意留下的軌跡資料會如何被利用？然而在2014, 2016的情境下，已不是「上線連網」時的個資收集與曝露，而是無所不在不無時不刻無所不極的全方面記錄蒐集&amp;mdash;從行動電話的地理位置追踪到行車記錄、運動手環、物聯網「智慧」裝置等等。所以作為一個人主觀希望願意表述出來，所欲告之世人的「自己」&amp;ndash;我這個人是什麼個性、有什麼興趣啫好、抱著什麼樣的信念價值&amp;hellip;.，早已經無關緊要。商業公司、政府、僱主、陌生人等等，甚至朋友，他們更重視與相信的，反倒是那個透過各方數據剖析揭露的所謂「更」真實、「更」客觀的&lt;strong&gt;我&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;天啊，有沒有這麼對人的自主（self autonomy）與存在價值感到這麼地絕望啊！！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/xGE4tuU.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;強烈推薦這個Al Jazeera 精心製作網站或下載其電子書格式（epub, pdf）。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>檔案或目錄加密軟體</title>
      <link>https://blog.jxtsai.info/2016/10/28/file-encrypt</link>
      <pubDate>Fri, 28 Oct 2016 11:14:00 +0000</pubDate>
      
      <guid>https://blog.jxtsai.info/2016/10/28/file-encrypt</guid>
      <description>

&lt;p&gt;雲端硬碟空間的服務，讓工作或常用資料備份在遠端伺服器，一但本地端電腦出了狀況，最主要擔心檔案如何先取出的問題便不再擾人，可以隨時地再次進行重整化或重新安裝作業系統，或是根本換一台電腦的應對處置。
不過隨著個人慢慢地了解一點資訊安全的皮毛以及落實個人資訊自主權與隱私的龜毛之後，益發覺得儲放於雲端的資料&lt;strong&gt;有些&lt;/strong&gt;需要先進行加密再上傳存放（有些極重要的安全資料，如GPG私鑰，我是不會把它上傳到網路而是另外存在SD數位安全卡。不過話說，從來也沒人傳加密郵件給我就是了:p）。因此先試用了二款「開源」的加密軟體&amp;mdash;cryptomator &amp;amp; CryFS，本文為簡單的使用介紹。&lt;/p&gt;

&lt;h3 id=&#34;cryptomator&#34;&gt;cryptomator&lt;/h3&gt;

&lt;p&gt;這款軟體是從調查記者的安全工具指南上看到的推薦。先從&lt;a href=&#34;https://cryptomator.org/&#34;&gt;其官網&lt;/a&gt;下載符合自己電腦作業系統的安全軟體，以我為例(ubuntu 14.04 64)，即是下載Version 1.2.0 • For Debian-based OS版本，稍後透過ubuntu software center 安裝（安裝後居然要佔200多mb）
&lt;img src=&#34;https://i.imgur.com/6qWZSaQ.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;官網的使用示範影片（以window作業系統為例）
&lt;a href=&#34;https://www.youtube.com/watch?v=zhDg2qnLgfo&#34;&gt;https://www.youtube.com/watch?v=zhDg2qnLgfo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;啟動後的圖形介面
&lt;img src=&#34;https://i.imgur.com/6RkxLz5.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;按著其操作指南，使用者得先在硬碟（或是本地端與雲端儲存同步的專用資料夾底下）建立一個「保險庫」（vault）,用它來儲放欲加密的檔案。
&lt;img src=&#34;https://i.imgur.com/cMOJsC0.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;先試試把一些檔案搬進去這個保險庫，重新啟動cryptomator，好讓它可以開始進行加密程序。目前看起來是有在進行一個加密的動作。照理說，原來拖入在此保險庫的未加密檔案，在完成加密後，理應把它刪除才是，所以我就徑行了刪除。
&lt;img src=&#34;https://i.imgur.com/STQGyae.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;現在試著操作保險庫中加密檔案解密，當然解密前一定會詢問當初給這個vault設的主密碼，正確輸入後才會開始進行解密。
&lt;img src=&#34;https://i.imgur.com/lUhJiu8.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在原作業的電腦上可以在輸入主密碼後，解密保險庫中的檔案，正常地讀取其內容。但是當我在另一台電腦上實驗能否解密dropbox保險庫中的加密檔案，卻傳回了失敗無法掛載該磁區的訊息。也不知要去哪裏查log檔案找出錯誤。
&lt;img src=&#34;https://i.imgur.com/xhyMaGa.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;cryfs&#34;&gt;CryFS&lt;/h3&gt;

&lt;p&gt;因為上述使用cryptomator的過程不算順利，從官網的說明與操示影片也是讓我看得一知半解，故決定再找找其它提供加密的開源軟體試試。
目前有一款被推薦的CryFS,主要以linux系統為運行平台。反正這些需要加密的資料也用不著與其它人共用分享，故「毅然」來試用看看。&lt;/p&gt;

&lt;p&gt;同樣也是在&lt;a href=&#34;https://www.cryfs.org/tutorial&#34;&gt;其官網&lt;/a&gt;下載，再透過ubuntu software center 安裝（安裝後只佔2mb左右，大勝）
&lt;img src=&#34;https://i.imgur.com/dkoRtR4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;目前CryFS的操作主要以純文字介面為主，透過在cli環境下指令來建置欲加密檔案的存放目錄以及解密目錄。後者下指令建立後,cryfs會將其弄成一個「虛擬的目錄」，換言之，被搬移到存放目錄的檔案或資料夾在此會自動被加密，只能透過解密目錄的開啟來察看其內容。但因為它又是一個「虛擬目錄」，故即便電腦落入它人手中，也無法隨便開啟，得先要啟動cryfs還原掛載該虛擬目錄，再輸入主密碼來讀取其內容。
解密還原檔案前，先會要求輸入正確的主密碼
&lt;img src=&#34;https://i.imgur.com/q1xKoTf.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;它也支援雲端儲存加密，作法其實是先在本地端雲端同步備分的目錄下建立一個欲存放加密資料的目錄夾與解密夾。
我自己先試著在第一台電腦上作了一個dropbox的加密資料夾，並放上經過CryFS加密後的檔案。所以一般人在這個加密的資料夾看到的檔案內容長得這個樣子：
&lt;img src=&#34;https://i.imgur.com/GQgNpVl.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;接下來我試著在第二台電腦上來試試能否解密還原dropbox加密資料夾當中的原始內容，按其教學指南所示，我先在cli環境下輸入：
&lt;code&gt;$acryfs Dropbox/encryt moundir&lt;/code&gt;
#encryp是我在dropbox存放加密文件的資料夾，而moundir則是本地端欲開啟該文件的解密資料夾。
輸入完上述指令後，系統因為找不到moundir這個目錄，故會問我是否要在本地端建立一個mountdir目錄，然後接下來詢問我encryt密碼。我先故意輸入錯誤密碼，結果系統回覆說因密碼錯誤無法載入設定檔也無法解密encrypt目錄下的加密文件。
&lt;img src=&#34;https://i.imgur.com/VedMvBY.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;第二次我方輸入正常密碼，這時就成功地掛載了本地端的解密目錄。當然按CryFS的設計，它在第二台電腦中也是一個「虛擬出來的」目錄。
&lt;img src=&#34;https://i.imgur.com/ppZ3deF.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;而要卸除mountdir這個虛擬目錄的掛載，只要輸入：
&lt;code&gt;$fusermount -u mountdir&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;則這個目錄就會自動從第二台電腦上的掛載消失，雖然還是可以看到該目錄，但點擊後其內容空無一物。
&lt;img src=&#34;https://i.imgur.com/BmEsXbY.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;我是無法比較cryptomator/CryFS二者之間加密強度的高低，不過初步二者用過後，我會留下CryFS繼續利用它來對重要資料進行加密。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>another hexo site </title>
      <link>https://blog.jxtsai.info/2016/10/26/hexo-site</link>
      <pubDate>Wed, 26 Oct 2016 14:14:00 +0000</pubDate>
      
      <guid>https://blog.jxtsai.info/2016/10/26/hexo-site</guid>
      <description>&lt;p&gt;今天上午看MLB世界大賽系列第一場轉播，因為看得很悶，所以一邊動手作了一個新網站。其目的是想來測試使用「國人」以javascript開發的&lt;a href=&#34;https://hexo.io&#34;&gt;靜態網頁生成器hexo&lt;/a&gt;，順便動手來整理昨天沒來由地無理頭的想法：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/4co1VDF.png&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;https://i.imgur.com/8NFAXdz.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;這個簡單網站的實質內容取材與方向是：&lt;/em&gt;
先把相關初步資料整理在&lt;a href=&#34;https://unote.jxtsai.info&#34;&gt;這裏（https://unote.jxtsai.info）&lt;/a&gt;
目前在聯合國憲章人權保護特別程序下的幾個主題，應該是這幾個和台灣社會以及&lt;strong&gt;我個人興趣&lt;/strong&gt;比較相關，然後會再陸續把台灣在這領域的近況資料補充進去，有能力地話會寫下個人觀點的觀察分析。如此算來，一年也不過要寫3~4篇文章，所以應該還好吧？&lt;/p&gt;

&lt;p&gt;而這個平台的架設方法則先安裝hexo在本地端電腦，寫好md文章轉成html格式，先發佈到gitlab.com（因為一直看不懂gitlab pages得要使用其ci的設定方法，所以尚無法直接利用它的靜態網頁服務），再透過netlify.com 提供的免費靜態網頁部署服務（且具自定網域與SSL功能）。　&lt;/p&gt;

&lt;p&gt;唉，如果小熊今年還是沒能拿到世界冠軍，我就。。。╰（‵□′）╯（發毒誓）再做另一個有關聯合國人權條約機構的網站。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>新站啟用</title>
      <link>https://blog.jxtsai.info/2016/10/24/hugo-site</link>
      <pubDate>Mon, 24 Oct 2016 11:14:00 +0000</pubDate>
      
      <guid>https://blog.jxtsai.info/2016/10/24/hugo-site</guid>
      <description>

&lt;p&gt;之前試用了幾款靜態網頁生成器，並相繼把其安裝與使用簡介記錄下來。最近才發現早有一個整理了github上面受歡迎的&lt;a href=&#34;https://www.staticgen.com/&#34;&gt;開源靜態網頁生成器&lt;/a&gt;網站，的確是蠻一目了然的實用指南。
&lt;img src=&#34;https://i.imgur.com/cBJrokm.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;例如之前試過的jekyll就是其中排名第一（以得到星號、觀注度和fork次數計算）的靜態網頁生成器。從這個網站，我才知道之前曾試用的gitbook原來也是一個開源專案，除了提供網頁版的電子書線上編輯與作品發表外，另有客戶端的套件可下載安裝，讓使用者可以在自己的電腦端安裝gitbook-cli後即可以利用自己習慣愛用的純文字編輯器來寫作文本,再將之發佈到網路上。此單機版雖然理論上可以佈署在某個雲端虛擬機器上來運行，但似乎無法如gitbook網頁版支援多人協同編輯工作，不過其優點在於可以自行調校需要的版型與應用外掛功能（原來gitbook志願者開發的外掛已多達近500個！！）
``&lt;/p&gt;

&lt;p&gt;看到這麼多靜態網頁生成器的出現，讓我更動心地想把markdown語法練熟一點，慢慢調整自己的寫作習慣單純地回歸純文字環境而不必啟動太複雜的版面排列編輯器，也逐步減少在blogger.com　/wordpress 後台寫部落格草稿的麻煩，因為每一次存檔的post request都似乎是一趟趟本地與雲端機器之間來回回應的時間與能源耗損（是真的有這麼計較嗎？）&lt;/p&gt;

&lt;h5 id=&#34;blogger-wordpress-xml備份文件的轉檔&#34;&gt;blogger/ wordpress xml備份文件的轉檔&lt;/h5&gt;

&lt;p&gt;有些囑目度較高的靜態網頁生成器如jekyll/ hugo,已有熱心的支持者協助開發了從blogger/ wordpress等平台跳船改泊的方法。例如我個人即是參考這篇文章的作法&lt;a href=&#34;https://samaxes.com/2016/02/static-site-from-wordpress-to-hugo/&#34;&gt;Moving to a Static Website, part 1: From WordPress to Hugo&lt;/a&gt;,將blogger上近700篇的文章順利自動轉成了markdown格式。因為其中還有許多圖片與連結要作修改，在今年六月部落格搬了一次家的勞心動作後，短期內不會再花時間一一地修改這些MD文件，只是把它們安心地放在個人電腦的硬碟裏存檔備份。&lt;/p&gt;

&lt;h5 id=&#34;markdown語法的練習&#34;&gt;markdown語法的練習&lt;/h5&gt;

&lt;p&gt;網路上不少markdonw語法入門皆提到，應用md語法的優點，仍在於讓寫作者單純地利用鍵盤直接記下版型指令，讓寫作者可先專心於文本內容的流𣈱書寫，先不須煩心頻繁切換到滑鼠啟動文書編輯軟體複雜的功能面版。其實我本來就不太愛用word文件編輯軟體，尤其痛恨它在不同版本與載具中就會曝露自身夾帶許多莫名奇妙的隱藏肥大編碼，更別提其隨著商業公開版本的不斷更新，新版文件無法相容相見於舊版軟體的尷尬囧境。所以這篇：指南利用純文字寫作&lt;a href=&#34;http://www.jianshu.com/p/qqGjLN&#34;&gt;為何作家應該用markdown保存自己的文稿&lt;/a&gt;　真是說中了我的心情啊。&lt;/p&gt;

&lt;p&gt;至於學習語法最好的方式，除了先從簡單的認識入門，不妨試用者幾篇文件來編輯ＭＤ語法：
+ &lt;a href=&#34;http://www.jianshu.com/p/2d1768785661&#34;&gt;第一步：学习Markdown语法编辑概要&lt;/a&gt;
+ &lt;a href=&#34;http://wowubuntu.com/markdown/index.html#link&#34;&gt;Markdown 语法说明&lt;/a&gt; (简体中文版)&lt;/p&gt;

&lt;p&gt;雖然任何純文字編輯器都可以用來作md文件的編輯器。我個人最喜愛用的是sublime text，但其中文輸入支援不佳，故在寫中文時我多使用ubuntu內鍵的text editor。最近從這篇文章的介紹:&lt;a href=&#34;http://www.arthurtoday.com/2015/04/6-markdown-editors-for-ubuntu-linux.html&#34;&gt;Ubuntu 六款 Markdown 編輯器快速試用心得&lt;/a&gt;,另外下載了&lt;a href=&#34;http://pad.haroopress.com&#34;&gt;haroopad&lt;/a&gt;使用，其優點在於提供了文件預覧功能，會比單純地在text editor文字編輯器上工作方便地知識打入的語法是否正確呈現。
&lt;img src=&#34;https://i.imgur.com/4gHFK5c.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;如果要使用markdown線上編輯服務，過去我偶而會使用的是hackpad，但個人不太喜歡它被dropbox收購後，其文件閱讀被整合成dropbox paper的樣式，故近日來改採用&lt;a href=&#34;http://hackmd.io&#34;&gt;hackmd.io&lt;/a&gt;的線上文件編輯，可惜它目前的線上協同合作功能暫時還比不上hackpad。&lt;/p&gt;

&lt;h5 id=&#34;新站啟用&#34;&gt;新站啟用&lt;/h5&gt;

&lt;p&gt;既然橫下心想要多採用MD寫作與保持文檔了，未來blogger也不會再作更新，畢竟同一文章卻得在不同格式之間地貼來貼去還真是蠻麻煩的，且我的部落格瀏覧量向來很低，尤其在社群社交網站當道的年代中自己並不使用臉書，如此在台灣逐漸被臉書單一化的網路應用層世界裏，一直乏人問津。不過書寫本身是一件蠻有趣的事，在數位時代中可以胡亂實驗各種平台或寫作方式，探索各種不斷開發前進的網頁技術變化，這些始終是我接觸互聯網世界以來最大樂趣之一，所以我當然還是會繼續公開地分享一些以文字為主的記錄。blogger有另一個網路大神當靠山，但blogger自定網域卻無法提供ssl支援，這點讓我心裏蠻介意不痛快的，更別提其最近又&lt;a href=&#34;https://www.propublica.org/article/google-has-quietly-dropped-ban-on-personally-identifiable-web-tracking&#34;&gt;默默修改用戶隱私條款&lt;/a&gt;的作法，讓我想逐步脫離對其依賴（果然是難相處啊我）。之後&lt;a href=&#34;http://self.jxtsai.info&#34;&gt;blogger.com&lt;/a&gt;上面只會保留來作舊文的存檔連結，未來網路寫作的發佈平台會轉向利用hugo作成,存放在github的空間: &lt;a href=&#34;https://blog.jxtsai.info&#34;&gt;https//:blog.jxtsai.info&lt;/a&gt;。(其實比較想存放在開源的gitlab，但一直看不懂它的ci設定方法)&lt;/p&gt;

&lt;h5 id=&#34;靜態網頁生成器的精進修練&#34;&gt;靜態網頁生成器的精進修練&lt;/h5&gt;

&lt;p&gt;雖然看似有這麼多各家語言寫成的靜態網頁生成器，可以在彈指之間就架好一個可發佈的網站內容，但是若想調校出與眾不同的模版樣式，就得花時間在摸熟CSS/SASS，一整個就是人生沒有捷徑可以偷懶的感覺啊。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>